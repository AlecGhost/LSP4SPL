name: Release

on:
  release:
    types: [published]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64
          - os: windows-latest
            target: i686-pc-windows-msvc
            code-target: win32-ia32
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
            container: ubuntu:18.04
          - os: macos-11
            target: x86_64-apple-darwin
            code-target: darwin-x64
          - os: macos-11
            target: aarch64-apple-darwin
            code-target: darwin-arm64
    name: dist (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    
    env:
      RA_TARGET: ${{ matrix.target }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install toolchain dependencies
        if: matrix.container == 'ubuntu:18.04'
        shell: bash
        run: |
          apt-get update && apt-get install -y build-essential curl
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "https://sh.rustup.rs" | sh -s -- --profile minimal --default-toolchain none -y
          echo "${CARGO_HOME:-$HOME/.cargo}/bin" >> $GITHUB_PATH

      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update stable
          rustup target add ${{ matrix.target }}
          rustup component add rust-src

      - name: Build
        run: cargo build --all --release --target ${{ matrix.target }}

      - name: Rename binary (unix)
        if: matrix.os != 'windows-latest'
        run: mv target/${{ matrix.target }}/release/lsp4spl target/${{ matrix.target }}/release/lsp4spl-${{ matrix.target }}

      - name: Rename binary (windows)
        if: matrix.os == 'windows-latest'
        run: move target/${{ matrix.target }}/release/lsp4spl.exe target/${{ matrix.target }}/release/lsp4spl-${{ matrix.target }}.exe

      - name: Attach to release (unix)
        if: matrix.os != 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.target }}/release/lsp4spl-${{ matrix.target }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Attach to release (windows)
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.target }}/release/lsp4spl-${{ matrix.target }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
